server:
  port: 5073
  #port: ${PORT:0}
spring:
  application:
    name: resell-processor
  redis:
    host: localhost
    password:
    port: 6379
    db: 3
    timeout: 60000
  rabbitmq:
    virtualhost: /
    host: localhost
    port: 5672
    username: guest
    password: guest
    thread:
      min: 1
      max: 4
  jackson:
    default-property-inclusion: NON_NULL

eureka:
  instance: instance-id=${spring:application:name}:${spring:application:instance_id:${random:value}}
  client:
    service-url:
      defaultzone: http://localhost:8761

api:
  rabbitmq:
    user:
      token:
        exchange: resell.person.auth.token.exchange
        routingkey: #
        routing: process
        queue: resell.person.auth.token.queue
        max.retries: 1
        dlq:
          routing: dlq
          queue: resell.person.auth.token.queue.dlq
          delay: 1000
        parkinglot:
          queue: resell.person.auth.token.queue.parkinglot
          routing: parkinglot
    getnet:
      auth:
        exchange: resell-getnet-creat-auth-exchange
        routingkey: #
        queue: resell-getnet-creat-auth-queue
    billet:
      payment:
        exchange: resell.person.billet.payment.exchange
        routingkey: #
        routing: process
        queue: resell.person.billet.payment.queue
        max.retries: 1
        dlq:
          routing: dlq
          queue: resell.person.billet.payment.queue.dlq
          delay: 1000
        parkinglot:
          queue: resell.person.billet.payment.queue.parkinglot
          routing: parkinglot

integration:
  getnet:
    auth:
      clientId: 94d15c64-ad8b-46af-9c90-3e505155a70f
      clientSecret: c6bcb454-0ceb-4fa5-88f2-73e622aa0533
      scope: oob
      grantType: client_credentials

feign:
  #client:
    #config:
      #feignName:
        #connectTimeout: 5000
        #readTimeout: 5000
        #loggerLevel: full

  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
    response:
      enabled: true
        #errorDecoder: com.example.SimpleErrorDecoder
        #retryer: com.example.SimpleRetryer
        #requestInterceptors:
          #- com.example.FooRequestInterceptor
          #- com.example.BarRequestInterceptor
        #decode404: false
        #encoder: com.example.SimpleEncoder
        #decoder: com.example.SimpleDecoder
        #contract: com.example.SimpleContract